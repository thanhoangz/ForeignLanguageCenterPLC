// <auto-generated />
using System;
using ForeignLanguageCenterPLC.Data.EF;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace ForeignLanguageCenterPLC.Data.EF.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20190928015205_initialize")]
    partial class initialize
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("ForeignLanguageCenterPLC.Data.Entities.AttendanceSheet", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Date");

                    b.Property<DateTime>("DateCreated");

                    b.Property<DateTime>("DateModified");

                    b.Property<string>("LanguageClassId")
                        .IsRequired();

                    b.Property<int?>("LecturerId")
                        .IsRequired();

                    b.Property<string>("Note");

                    b.Property<int>("Status");

                    b.Property<int?>("TutorId");

                    b.Property<int>("UserId");

                    b.Property<decimal>("WageOfLecturer");

                    b.Property<decimal>("WageOfTutor");

                    b.HasKey("Id");

                    b.HasIndex("LanguageClassId");

                    b.HasIndex("LecturerId");

                    b.HasIndex("TutorId");

                    b.HasIndex("UserId");

                    b.ToTable("AttendanceSheets");
                });

            modelBuilder.Entity("ForeignLanguageCenterPLC.Data.Entities.AttendanceSheetDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AttendanceSheetId");

                    b.Property<DateTime>("DateCreated");

                    b.Property<DateTime>("DateModified");

                    b.Property<string>("LanguageClassId");

                    b.Property<string>("LearnerId")
                        .IsRequired();

                    b.Property<string>("Note");

                    b.Property<int>("Status");

                    b.HasKey("Id");

                    b.HasIndex("AttendanceSheetId");

                    b.HasIndex("LanguageClassId");

                    b.HasIndex("LearnerId");

                    b.ToTable("AttendanceSheetDetails");
                });

            modelBuilder.Entity("ForeignLanguageCenterPLC.Data.Entities.ClassRoom", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DateCreated");

                    b.Property<DateTime>("DateModified");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(500);

                    b.Property<string>("Note");

                    b.Property<int>("Status");

                    b.HasKey("Id");

                    b.ToTable("ClassRooms");
                });

            modelBuilder.Entity("ForeignLanguageCenterPLC.Data.Entities.Contact", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Address")
                        .HasMaxLength(250);

                    b.Property<string>("Email")
                        .HasMaxLength(250);

                    b.Property<double?>("Lat");

                    b.Property<double?>("Lng");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(250);

                    b.Property<string>("Other");

                    b.Property<string>("Phone")
                        .HasMaxLength(50);

                    b.Property<int>("Status");

                    b.Property<string>("Website")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.ToTable("ContactDetails");
                });

            modelBuilder.Entity("ForeignLanguageCenterPLC.Data.Entities.Course", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Content")
                        .IsRequired();

                    b.Property<DateTime>("DateCreated");

                    b.Property<DateTime>("DateModified");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(500);

                    b.Property<string>("Note");

                    b.Property<int>("NumberOfSession");

                    b.Property<decimal>("Price");

                    b.Property<int>("Status");

                    b.Property<int>("TraingTime");

                    b.HasKey("Id");

                    b.ToTable("Courses");
                });

            modelBuilder.Entity("ForeignLanguageCenterPLC.Data.Entities.EndingCoursePoint", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DateCreated");

                    b.Property<DateTime>("DateModified");

                    b.Property<DateTime>("DateOnPoint");

                    b.Property<DateTime>("ExaminationDate");

                    b.Property<string>("LanguageClassId")
                        .IsRequired();

                    b.Property<int>("LecturerId");

                    b.Property<string>("Note");

                    b.Property<int>("Status");

                    b.Property<int>("UserId");

                    b.HasKey("Id");

                    b.HasIndex("LanguageClassId");

                    b.HasIndex("LecturerId");

                    b.HasIndex("UserId");

                    b.ToTable("EndingCoursePoints");
                });

            modelBuilder.Entity("ForeignLanguageCenterPLC.Data.Entities.EndingCoursePointDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("AveragePoint");

                    b.Property<DateTime>("DateCreated");

                    b.Property<DateTime>("DateModified");

                    b.Property<int>("EndingCoursePointId");

                    b.Property<string>("LearnerId")
                        .IsRequired();

                    b.Property<decimal>("ListeningPoint");

                    b.Property<string>("Note");

                    b.Property<decimal>("ReadingPoint");

                    b.Property<decimal>("SayingPoint");

                    b.Property<int>("SortOrder");

                    b.Property<int>("Status");

                    b.Property<decimal>("TotalPoint");

                    b.Property<decimal>("WritingPoint");

                    b.HasKey("Id");

                    b.HasIndex("EndingCoursePointId");

                    b.HasIndex("LearnerId");

                    b.ToTable("EndingCoursePointDetails");
                });

            modelBuilder.Entity("ForeignLanguageCenterPLC.Data.Entities.Feedback", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DateCreated");

                    b.Property<DateTime>("DateModified");

                    b.Property<string>("Email")
                        .HasMaxLength(250);

                    b.Property<string>("Message")
                        .HasMaxLength(500);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(250);

                    b.Property<int>("Status");

                    b.HasKey("Id");

                    b.ToTable("Feedbacks");
                });

            modelBuilder.Entity("ForeignLanguageCenterPLC.Data.Entities.Footer", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Content")
                        .IsRequired();

                    b.HasKey("Id");

                    b.ToTable("Footers");
                });

            modelBuilder.Entity("ForeignLanguageCenterPLC.Data.Entities.GuestType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DateCreated");

                    b.Property<DateTime>("DateModified");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(250);

                    b.Property<string>("Note");

                    b.Property<int>("Status");

                    b.HasKey("Id");

                    b.ToTable("GuestTypes");
                });

            modelBuilder.Entity("ForeignLanguageCenterPLC.Data.Entities.LanguageClass", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<decimal>("CourseFee");

                    b.Property<int?>("CourseId");

                    b.Property<DateTime>("DateCreated");

                    b.Property<DateTime>("DateModified");

                    b.Property<DateTime>("EndDay");

                    b.Property<decimal>("LessonFee");

                    b.Property<decimal>("MonthlyFee");

                    b.Property<string>("Name")
                        .IsRequired();

                    b.Property<string>("Note");

                    b.Property<DateTime>("StartDay");

                    b.Property<int>("Status");

                    b.HasKey("Id");

                    b.HasIndex("CourseId");

                    b.ToTable("LanguageClasses");
                });

            modelBuilder.Entity("ForeignLanguageCenterPLC.Data.Entities.Learner", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(500);

                    b.Property<DateTime>("Birthday");

                    b.Property<string>("CardId");

                    b.Property<DateTime>("DateCreated");

                    b.Property<DateTime>("DateModified");

                    b.Property<string>("Email");

                    b.Property<string>("Facebook");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.Property<int>("GuestTypeId");

                    b.Property<string>("Image");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.Property<string>("Note");

                    b.Property<string>("ParentFullName")
                        .IsRequired();

                    b.Property<string>("ParentPhone")
                        .IsRequired()
                        .HasColumnType("VARCHAR(16)");

                    b.Property<string>("Phone")
                        .HasColumnType("VARCHAR(16)");

                    b.Property<bool>("Sex");

                    b.Property<int>("Status");

                    b.HasKey("Id");

                    b.HasIndex("GuestTypeId");

                    b.ToTable("Learners");
                });

            modelBuilder.Entity("ForeignLanguageCenterPLC.Data.Entities.Lecturer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(500);

                    b.Property<decimal>("Allowance");

                    b.Property<decimal>("BasicSalary");

                    b.Property<DateTime>("Birthday");

                    b.Property<decimal>("Bonus");

                    b.Property<string>("CardId");

                    b.Property<string>("Certificate")
                        .IsRequired();

                    b.Property<DateTime>("DateCreated");

                    b.Property<DateTime>("DateModified");

                    b.Property<string>("Email");

                    b.Property<string>("ExperienceRecord");

                    b.Property<string>("Facebook");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.Property<string>("Image")
                        .IsRequired();

                    b.Property<decimal>("InsurancePremium");

                    b.Property<bool>("IsTutor");

                    b.Property<bool>("IsVisitingLecturer");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.Property<int>("MarritalStatus");

                    b.Property<string>("Nationality")
                        .IsRequired();

                    b.Property<string>("Note");

                    b.Property<string>("Phone")
                        .HasColumnType("VARCHAR(16)");

                    b.Property<string>("Position")
                        .IsRequired();

                    b.Property<DateTime>("QuitWorkDay");

                    b.Property<bool>("Sex");

                    b.Property<int>("Status");

                    b.Property<decimal>("WageOfLecturer");

                    b.Property<decimal>("WageOfTutor");

                    b.HasKey("Id");

                    b.ToTable("Lecturers");
                });

            modelBuilder.Entity("ForeignLanguageCenterPLC.Data.Entities.PaySlip", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Content")
                        .IsRequired();

                    b.Property<DateTime>("Date");

                    b.Property<DateTime>("DateCreated");

                    b.Property<DateTime>("DateModified");

                    b.Property<string>("Note");

                    b.Property<int>("PaySlipTypeId");

                    b.Property<string>("PersonnelId")
                        .IsRequired();

                    b.Property<string>("Receiver");

                    b.Property<string>("SendPersonnelId");

                    b.Property<int>("Status");

                    b.Property<decimal>("Total");

                    b.Property<int>("UserId");

                    b.HasKey("Id");

                    b.HasIndex("PaySlipTypeId");

                    b.HasIndex("PersonnelId");

                    b.HasIndex("SendPersonnelId");

                    b.HasIndex("UserId");

                    b.ToTable("PaySlips");
                });

            modelBuilder.Entity("ForeignLanguageCenterPLC.Data.Entities.PaySlipType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DateCreated");

                    b.Property<DateTime>("DateModified");

                    b.Property<string>("Name")
                        .IsRequired();

                    b.Property<string>("Note");

                    b.Property<int>("Status");

                    b.HasKey("Id");

                    b.ToTable("PaySlipTypes");
                });

            modelBuilder.Entity("ForeignLanguageCenterPLC.Data.Entities.PeriodicPoint", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DateCreated");

                    b.Property<DateTime>("DateModified");

                    b.Property<DateTime>("DateOnPoint");

                    b.Property<DateTime>("ExaminationDate");

                    b.Property<string>("LanguageClassId")
                        .IsRequired();

                    b.Property<int>("LecturerId");

                    b.Property<string>("Note");

                    b.Property<int>("Status");

                    b.Property<int>("UserId");

                    b.Property<int>("Week");

                    b.HasKey("Id");

                    b.HasIndex("LanguageClassId");

                    b.HasIndex("LecturerId");

                    b.HasIndex("UserId");

                    b.ToTable("PeriodicPoints");
                });

            modelBuilder.Entity("ForeignLanguageCenterPLC.Data.Entities.PeriodicPointDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("AveragePoint");

                    b.Property<DateTime>("DateCreated");

                    b.Property<DateTime>("DateModified");

                    b.Property<string>("LearnerId")
                        .IsRequired();

                    b.Property<string>("Note");

                    b.Property<int>("PeriodicPointId");

                    b.Property<decimal>("Point");

                    b.Property<decimal>("SortedByAveragePoint");

                    b.Property<decimal>("SortedByPoint");

                    b.Property<int>("Status");

                    b.HasKey("Id");

                    b.HasIndex("LearnerId");

                    b.HasIndex("PeriodicPointId");

                    b.ToTable("PeriodicPointDetails");
                });

            modelBuilder.Entity("ForeignLanguageCenterPLC.Data.Entities.Personnel", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(500);

                    b.Property<decimal>("Allowance");

                    b.Property<decimal>("BasicSalary");

                    b.Property<DateTime>("Birthday");

                    b.Property<decimal>("Bonus");

                    b.Property<string>("CardId");

                    b.Property<string>("Certificate")
                        .IsRequired();

                    b.Property<DateTime>("DateCreated");

                    b.Property<DateTime>("DateModified");

                    b.Property<string>("Email");

                    b.Property<string>("ExperienceRecord");

                    b.Property<string>("Facebook");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.Property<string>("Image")
                        .IsRequired();

                    b.Property<decimal>("InsurancePremium");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.Property<int>("MarritalStatus");

                    b.Property<string>("Nationality")
                        .IsRequired();

                    b.Property<string>("Note");

                    b.Property<string>("Phone")
                        .HasColumnType("VARCHAR(16)");

                    b.Property<string>("Position")
                        .IsRequired();

                    b.Property<DateTime>("QuitWorkDay");

                    b.Property<bool>("Sex");

                    b.Property<int>("Status");

                    b.HasKey("Id");

                    b.ToTable("Personnels");
                });

            modelBuilder.Entity("ForeignLanguageCenterPLC.Data.Entities.Receipt", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CollectionDate");

                    b.Property<DateTime>("DateCreated");

                    b.Property<DateTime>("DateModified");

                    b.Property<string>("ForReason")
                        .IsRequired();

                    b.Property<string>("LearnerId");

                    b.Property<string>("NameOfPaymentApplicant")
                        .IsRequired()
                        .HasMaxLength(250);

                    b.Property<string>("Note");

                    b.Property<string>("PersonnelId")
                        .IsRequired();

                    b.Property<int>("ReceiptTypeId");

                    b.Property<int>("Status");

                    b.Property<decimal>("TotalAmount");

                    b.Property<int>("UserId");

                    b.HasKey("Id");

                    b.HasIndex("LearnerId");

                    b.HasIndex("PersonnelId");

                    b.HasIndex("ReceiptTypeId");

                    b.HasIndex("UserId");

                    b.ToTable("Receipts");
                });

            modelBuilder.Entity("ForeignLanguageCenterPLC.Data.Entities.ReceiptDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DateCreated");

                    b.Property<DateTime>("DateModified");

                    b.Property<decimal>("FundMoney");

                    b.Property<decimal>("InfrastructureMoney");

                    b.Property<string>("LanguageClassId")
                        .IsRequired();

                    b.Property<int>("Month");

                    b.Property<string>("Note");

                    b.Property<decimal>("OtherMoney");

                    b.Property<string>("ReceiptId")
                        .IsRequired();

                    b.Property<int>("Status");

                    b.Property<decimal>("TotalMoney");

                    b.Property<decimal>("Tuition");

                    b.Property<int>("Year");

                    b.HasKey("Id");

                    b.HasIndex("LanguageClassId");

                    b.HasIndex("ReceiptId");

                    b.ToTable("ReceiptDetails");
                });

            modelBuilder.Entity("ForeignLanguageCenterPLC.Data.Entities.ReceiptType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DateCreated");

                    b.Property<DateTime>("DateModified");

                    b.Property<string>("Name")
                        .IsRequired();

                    b.Property<string>("Note");

                    b.Property<int>("Status");

                    b.HasKey("Id");

                    b.ToTable("ReceiptTypes");
                });

            modelBuilder.Entity("ForeignLanguageCenterPLC.Data.Entities.StudyProcess", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DateCreated");

                    b.Property<DateTime>("DateModified");

                    b.Property<DateTime>("InDate");

                    b.Property<string>("LanguageClassId")
                        .IsRequired();

                    b.Property<string>("LearnerId")
                        .IsRequired();

                    b.Property<string>("Note");

                    b.Property<DateTime>("OutDate");

                    b.Property<int>("Status");

                    b.HasKey("Id");

                    b.HasIndex("LanguageClassId");

                    b.HasIndex("LearnerId");

                    b.ToTable("StudyProcess");
                });

            modelBuilder.Entity("ForeignLanguageCenterPLC.Data.Entities.SystemConfig", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(128);

                    b.Property<int>("Status");

                    b.Property<string>("Value1");

                    b.Property<int?>("Value2");

                    b.Property<bool?>("Value3");

                    b.Property<DateTime?>("Value4");

                    b.Property<decimal?>("Value5");

                    b.HasKey("Id");

                    b.ToTable("SystemConfigs");
                });

            modelBuilder.Entity("ForeignLanguageCenterPLC.Data.Entities.TeachingSchedule", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ClassRoomId");

                    b.Property<DateTime>("DateCreated");

                    b.Property<DateTime>("DateModified");

                    b.Property<string>("DaysOfWeek")
                        .IsRequired();

                    b.Property<DateTime>("FromDate");

                    b.Property<string>("LanguageClassId")
                        .IsRequired();

                    b.Property<string>("LearnerId");

                    b.Property<int>("LecturerId");

                    b.Property<string>("Note");

                    b.Property<int>("Status");

                    b.Property<string>("TimeShift")
                        .HasMaxLength(500);

                    b.Property<DateTime>("ToDate");

                    b.HasKey("Id");

                    b.HasIndex("ClassRoomId");

                    b.HasIndex("LanguageClassId");

                    b.HasIndex("LearnerId");

                    b.HasIndex("LecturerId");

                    b.ToTable("TeachingSchedules");
                });

            modelBuilder.Entity("ForeignLanguageCenterPLC.Data.Entities.Timesheet", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("AdvancePayment");

                    b.Property<decimal>("Allowance");

                    b.Property<decimal>("Bonus");

                    b.Property<DateTime>("DateCreated");

                    b.Property<DateTime>("DateModified");

                    b.Property<float>("Day_1");

                    b.Property<float>("Day_10");

                    b.Property<float>("Day_11");

                    b.Property<float>("Day_12");

                    b.Property<float>("Day_13");

                    b.Property<float>("Day_14");

                    b.Property<float>("Day_15");

                    b.Property<float>("Day_16");

                    b.Property<float>("Day_17");

                    b.Property<float>("Day_18");

                    b.Property<float>("Day_19");

                    b.Property<float>("Day_2");

                    b.Property<float>("Day_20");

                    b.Property<float>("Day_21");

                    b.Property<float>("Day_22");

                    b.Property<float>("Day_23");

                    b.Property<float>("Day_24");

                    b.Property<float>("Day_25");

                    b.Property<float>("Day_26");

                    b.Property<float>("Day_27");

                    b.Property<float>("Day_28");

                    b.Property<float>("Day_29");

                    b.Property<float>("Day_3");

                    b.Property<float>("Day_30");

                    b.Property<float>("Day_31");

                    b.Property<float>("Day_4");

                    b.Property<float>("Day_5");

                    b.Property<float>("Day_6");

                    b.Property<float>("Day_7");

                    b.Property<float>("Day_8");

                    b.Property<float>("Day_9");

                    b.Property<decimal>("InsurancePremiums");

                    b.Property<int>("Month");

                    b.Property<string>("Note");

                    b.Property<string>("PersonnelId")
                        .IsRequired();

                    b.Property<decimal>("Salary");

                    b.Property<int>("Status");

                    b.Property<decimal>("TotalActualSalary");

                    b.Property<decimal>("TotalSalary");

                    b.Property<int>("TotalWorkday");

                    b.Property<int>("UserId");

                    b.Property<int>("Year");

                    b.HasKey("Id");

                    b.HasIndex("PersonnelId");

                    b.HasIndex("UserId");

                    b.ToTable("Timesheets");
                });

            modelBuilder.Entity("ForeignLanguageCenterPLC.Data.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DateCreated");

                    b.Property<DateTime>("DateModified");

                    b.Property<string>("FullName")
                        .IsRequired();

                    b.Property<string>("Password")
                        .IsRequired();

                    b.Property<int>("Status");

                    b.Property<string>("Username")
                        .IsRequired();

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("ForeignLanguageCenterPLC.Data.Entities.AttendanceSheet", b =>
                {
                    b.HasOne("ForeignLanguageCenterPLC.Data.Entities.LanguageClass", "LanguageClass")
                        .WithMany("AttendanceSheets")
                        .HasForeignKey("LanguageClassId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ForeignLanguageCenterPLC.Data.Entities.Lecturer", "Lecturer")
                        .WithMany("LecturerAttendanceSheets")
                        .HasForeignKey("LecturerId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ForeignLanguageCenterPLC.Data.Entities.Lecturer", "Tutor")
                        .WithMany("TutorAttendanceSheets")
                        .HasForeignKey("TutorId");

                    b.HasOne("ForeignLanguageCenterPLC.Data.Entities.User", "User")
                        .WithMany("AttendanceSheets")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ForeignLanguageCenterPLC.Data.Entities.AttendanceSheetDetail", b =>
                {
                    b.HasOne("ForeignLanguageCenterPLC.Data.Entities.AttendanceSheet", "AttendanceSheet")
                        .WithMany("AttendanceSheetDetails")
                        .HasForeignKey("AttendanceSheetId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ForeignLanguageCenterPLC.Data.Entities.LanguageClass", "LanguageClass")
                        .WithMany("AttendanceSheetDetails")
                        .HasForeignKey("LanguageClassId");

                    b.HasOne("ForeignLanguageCenterPLC.Data.Entities.Learner", "Learner")
                        .WithMany("AttendanceSheetDetails")
                        .HasForeignKey("LearnerId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ForeignLanguageCenterPLC.Data.Entities.EndingCoursePoint", b =>
                {
                    b.HasOne("ForeignLanguageCenterPLC.Data.Entities.LanguageClass", "LanguageClass")
                        .WithMany("EndingCoursePoints")
                        .HasForeignKey("LanguageClassId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ForeignLanguageCenterPLC.Data.Entities.Lecturer", "Lecturer")
                        .WithMany("EndingCoursePoints")
                        .HasForeignKey("LecturerId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ForeignLanguageCenterPLC.Data.Entities.User", "User")
                        .WithMany("EndingCoursePoints")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ForeignLanguageCenterPLC.Data.Entities.EndingCoursePointDetail", b =>
                {
                    b.HasOne("ForeignLanguageCenterPLC.Data.Entities.EndingCoursePoint", "EndingCoursePoint")
                        .WithMany("EndingCoursePointDetails")
                        .HasForeignKey("EndingCoursePointId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ForeignLanguageCenterPLC.Data.Entities.Learner", "Learner")
                        .WithMany("EndingCoursePointDetails")
                        .HasForeignKey("LearnerId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ForeignLanguageCenterPLC.Data.Entities.LanguageClass", b =>
                {
                    b.HasOne("ForeignLanguageCenterPLC.Data.Entities.Course")
                        .WithMany("LanguageClasses")
                        .HasForeignKey("CourseId");
                });

            modelBuilder.Entity("ForeignLanguageCenterPLC.Data.Entities.Learner", b =>
                {
                    b.HasOne("ForeignLanguageCenterPLC.Data.Entities.GuestType", "GuestType")
                        .WithMany()
                        .HasForeignKey("GuestTypeId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ForeignLanguageCenterPLC.Data.Entities.PaySlip", b =>
                {
                    b.HasOne("ForeignLanguageCenterPLC.Data.Entities.PaySlipType", "PaySlipType")
                        .WithMany("PaySlips")
                        .HasForeignKey("PaySlipTypeId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ForeignLanguageCenterPLC.Data.Entities.Personnel", "Personnel")
                        .WithMany("PersonnelPaySlip")
                        .HasForeignKey("PersonnelId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ForeignLanguageCenterPLC.Data.Entities.Personnel", "SendPersonnel")
                        .WithMany("SendPersonnelPaySlip")
                        .HasForeignKey("SendPersonnelId");

                    b.HasOne("ForeignLanguageCenterPLC.Data.Entities.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ForeignLanguageCenterPLC.Data.Entities.PeriodicPoint", b =>
                {
                    b.HasOne("ForeignLanguageCenterPLC.Data.Entities.LanguageClass", "LanguageClass")
                        .WithMany("PeriodicPoints")
                        .HasForeignKey("LanguageClassId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ForeignLanguageCenterPLC.Data.Entities.Lecturer", "Lecturer")
                        .WithMany("PeriodicPoints")
                        .HasForeignKey("LecturerId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ForeignLanguageCenterPLC.Data.Entities.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ForeignLanguageCenterPLC.Data.Entities.PeriodicPointDetail", b =>
                {
                    b.HasOne("ForeignLanguageCenterPLC.Data.Entities.Learner", "Learner")
                        .WithMany("PeriodicPointDetails")
                        .HasForeignKey("LearnerId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ForeignLanguageCenterPLC.Data.Entities.PeriodicPoint", "PeriodicPoint")
                        .WithMany("PeriodicPointDetails")
                        .HasForeignKey("PeriodicPointId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ForeignLanguageCenterPLC.Data.Entities.Receipt", b =>
                {
                    b.HasOne("ForeignLanguageCenterPLC.Data.Entities.Learner")
                        .WithMany("Receipts")
                        .HasForeignKey("LearnerId");

                    b.HasOne("ForeignLanguageCenterPLC.Data.Entities.Personnel", "Personnel")
                        .WithMany("Receipts")
                        .HasForeignKey("PersonnelId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ForeignLanguageCenterPLC.Data.Entities.ReceiptType", "ReceiptType")
                        .WithMany("Receipts")
                        .HasForeignKey("ReceiptTypeId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ForeignLanguageCenterPLC.Data.Entities.User", "User")
                        .WithMany("Receipts")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ForeignLanguageCenterPLC.Data.Entities.ReceiptDetail", b =>
                {
                    b.HasOne("ForeignLanguageCenterPLC.Data.Entities.LanguageClass", "LanguageClass")
                        .WithMany("ReceiptDetails")
                        .HasForeignKey("LanguageClassId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ForeignLanguageCenterPLC.Data.Entities.Receipt", "Receipt")
                        .WithMany("ReceiptDetails")
                        .HasForeignKey("ReceiptId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ForeignLanguageCenterPLC.Data.Entities.StudyProcess", b =>
                {
                    b.HasOne("ForeignLanguageCenterPLC.Data.Entities.LanguageClass", "LanguageClass")
                        .WithMany("StudyProcesses")
                        .HasForeignKey("LanguageClassId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ForeignLanguageCenterPLC.Data.Entities.Learner", "Learner")
                        .WithMany("StudyProcesses")
                        .HasForeignKey("LearnerId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ForeignLanguageCenterPLC.Data.Entities.TeachingSchedule", b =>
                {
                    b.HasOne("ForeignLanguageCenterPLC.Data.Entities.ClassRoom", "ClassRoom")
                        .WithMany("TeachingSchedules")
                        .HasForeignKey("ClassRoomId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ForeignLanguageCenterPLC.Data.Entities.LanguageClass", "LanguageClass")
                        .WithMany("TeachingSchedules")
                        .HasForeignKey("LanguageClassId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ForeignLanguageCenterPLC.Data.Entities.Learner")
                        .WithMany("TeachingSchedules")
                        .HasForeignKey("LearnerId");

                    b.HasOne("ForeignLanguageCenterPLC.Data.Entities.Lecturer", "Lecturer")
                        .WithMany()
                        .HasForeignKey("LecturerId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ForeignLanguageCenterPLC.Data.Entities.Timesheet", b =>
                {
                    b.HasOne("ForeignLanguageCenterPLC.Data.Entities.Personnel", "Personnel")
                        .WithMany("Timesheets")
                        .HasForeignKey("PersonnelId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ForeignLanguageCenterPLC.Data.Entities.User", "User")
                        .WithMany("Timesheets")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
